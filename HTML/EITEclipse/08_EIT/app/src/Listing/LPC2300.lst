


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2300.S: Startup file for Philips LPC2300 device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2006 Keil - An ARM Company. All rights
                        reserved.            */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The LPC2300.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x00000000  default setting (not remapped)
   23 00000000         ; *     0x40000000  when RAM_MODE is used
   24 00000000         ; *
   25 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   26 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   27 00000000         ; */
   28 00000000         
   29 00000000         
   30 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   31 00000000         
   32 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   33 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   34 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   35 00000000 00000013 
                       Mode_SVC



ARM Macro Assembler    Page 2 


                               EQU              0x13
   36 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   37 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   38 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   39 00000000         
   40 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   41 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   42 00000000         
   43 00000000         
   44 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   45 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   46 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   47 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   51 00000000         ;// </h>
   52 00000000         
   53 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   54 00000000 00000800 
                       SVC_Stack_Size
                               EQU              0x00000800
   55 00000000 00000080 
                       ABT_Stack_Size
                               EQU              0x00000080
   56 00000000 00000080 
                       FIQ_Stack_Size
                               EQU              0x00000080
   57 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   58 00000000 00000000 
                       USR_Stack_Size
                               EQU              0x00000000
   59 00000000         
   61 00000000 00000A00 
                       Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
 + USR_Stack_Size)
   62 00000000         
   63 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   64 00000000         Stack_Mem
                               SPACE            Stack_Size
   65 00000A00         
   66 00000A00 00000A00 



ARM Macro Assembler    Page 3 


                       Stack_Top
                               EQU              Stack_Mem + Stack_Size
   67 00000A00         
   68 00000A00         
   69 00000A00         ;// <h> Heap Configuration
   70 00000A00         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   71 00000A00         ;// </h>
   72 00000A00         
   73 00000A00 00000800 
                       Heap_Size
                               EQU              0x00000800
   74 00000A00         
   75 00000A00                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   76 00000000         Heap_Mem
                               SPACE            Heap_Size
   77 00000800         
   78 00000800         
   79 00000800         ; System Control Block (SCB) Module Definitions
   80 00000800 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
   81 00000800 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
   82 00000800 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
   83 00000800 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
   84 00000800 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
   85 00000800 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
   86 00000800 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
   87 00000800 0000010C 
                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sel 
                                                            Reg Offset
   88 00000800 000001A0 
                       SCS_OFS EQU              0x1A0       ; Sys Control and S
                                                            tatus Reg Offset
   89 00000800 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Periph Clock Sel 
                                                            Reg 0 Offset
   90 00000800 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Periph Clock Sel 



ARM Macro Assembler    Page 4 


                                                            Reg 0 Offset
   91 00000800         
   92 00000800         ; Constants
   93 00000800 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
   94 00000800 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
   95 00000800 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
   96 00000800 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
   97 00000800 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
   98 00000800 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
   99 00000800 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  100 00000800 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  101 00000800         
  102 00000800         ;// <e> Clock Setup
  103 00000800         ;//   <h> System Controls and Status Register (SYS)
  104 00000800         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  105 00000800         ;//                     <0=>  1 MHz to 20 MHz
  106 00000800         ;//                     <1=> 15 MHz to 24 MHz
  107 00000800         ;//     <e1.5>       OSCEN: Main Oscillator Enable
  108 00000800         ;//     </e>
  109 00000800         ;//   </h>
  110 00000800         ;//
  111 00000800         ;//   <h> PLL Clock Source Select Register (CLKSRCSEL)
  112 00000800         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  113 00000800         ;//                     <0=> Internal RC oscillator
  114 00000800         ;//                     <1=> Main oscillator
  115 00000800         ;//                     <1=> RTC oscillator
  116 00000800         ;//   </h>
  117 00000800         ;//
  118 00000800         ;//   <h> PLL Configuration Register (PLLCFG)
  119 00000800         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  120 00000800         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection
  121 00000800         ;//                     <1-32768><#-1>
  122 00000800         ;//                     <i> M Value
  123 00000800         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  124 00000800         ;//                     <1-256><#-1>
  125 00000800         ;//                     <i> N Value
  126 00000800         ;//   </h>
  127 00000800         ;//
  128 00000800         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  129 00000800         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f



ARM Macro Assembler    Page 5 


                       rom PLL
  130 00000800         ;//                     <1-256><#-1>
  131 00000800         ;//   </h>
  132 00000800         ;//
  133 00000800         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  134 00000800         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  135 00000800         ;//                     <1-16><#-1>
  136 00000800         ;//   </h>
  137 00000800         ;//
  138 00000800         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  139 00000800         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  140 00000800         ;//                     <0=> Pclk = Cclk / 4
  141 00000800         ;//                     <1=> Pclk = Cclk
  142 00000800         ;//                     <2=> Pclk = Cclk / 2
  143 00000800         ;//                     <3=> Pclk = Cclk / 8
  144 00000800         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  145 00000800         ;//                     <0=> Pclk = Cclk / 4
  146 00000800         ;//                     <1=> Pclk = Cclk
  147 00000800         ;//                     <2=> Pclk = Cclk / 2
  148 00000800         ;//                     <3=> Pclk = Cclk / 8
  149 00000800         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  150 00000800         ;//                     <0=> Pclk = Cclk / 4
  151 00000800         ;//                     <1=> Pclk = Cclk
  152 00000800         ;//                     <2=> Pclk = Cclk / 2
  153 00000800         ;//                     <3=> Pclk = Cclk / 8
  154 00000800         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  155 00000800         ;//                     <0=> Pclk = Cclk / 4
  156 00000800         ;//                     <1=> Pclk = Cclk
  157 00000800         ;//                     <2=> Pclk = Cclk / 2
  158 00000800         ;//                     <3=> Pclk = Cclk / 8
  159 00000800         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  160 00000800         ;//                     <0=> Pclk = Cclk / 4
  161 00000800         ;//                     <1=> Pclk = Cclk
  162 00000800         ;//                     <2=> Pclk = Cclk / 2
  163 00000800         ;//                     <3=> Pclk = Cclk / 8
  164 00000800         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  165 00000800         ;//                     <0=> Pclk = Cclk / 4
  166 00000800         ;//                     <1=> Pclk = Cclk
  167 00000800         ;//                     <2=> Pclk = Cclk / 2
  168 00000800         ;//                     <3=> Pclk = Cclk / 8
  169 00000800         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1
  170 00000800         ;//                     <0=> Pclk = Cclk / 4
  171 00000800         ;//                     <1=> Pclk = Cclk
  172 00000800         ;//                     <2=> Pclk = Cclk / 2
  173 00000800         ;//                     <3=> Pclk = Cclk / 8
  174 00000800         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0
  175 00000800         ;//                     <0=> Pclk = Cclk / 4
  176 00000800         ;//                     <1=> Pclk = Cclk
  177 00000800         ;//                     <2=> Pclk = Cclk / 2



ARM Macro Assembler    Page 6 


  178 00000800         ;//                     <3=> Pclk = Cclk / 8
  179 00000800         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  180 00000800         ;//                     <0=> Pclk = Cclk / 4
  181 00000800         ;//                     <1=> Pclk = Cclk
  182 00000800         ;//                     <2=> Pclk = Cclk / 2
  183 00000800         ;//                     <3=> Pclk = Cclk / 8
  184 00000800         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  185 00000800         ;//                     <0=> Pclk = Cclk / 4
  186 00000800         ;//                     <1=> Pclk = Cclk
  187 00000800         ;//                     <2=> Pclk = Cclk / 2
  188 00000800         ;//                     <3=> Pclk = Cclk / 8
  189 00000800         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  190 00000800         ;//                     <0=> Pclk = Cclk / 4
  191 00000800         ;//                     <1=> Pclk = Cclk
  192 00000800         ;//                     <2=> Pclk = Cclk / 2
  193 00000800         ;//                     <3=> Pclk = Cclk / 8
  194 00000800         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  195 00000800         ;//                     <0=> Pclk = Cclk / 4
  196 00000800         ;//                     <1=> Pclk = Cclk
  197 00000800         ;//                     <2=> Pclk = Cclk / 2
  198 00000800         ;//                     <3=> Pclk = Cclk / 8
  199 00000800         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  200 00000800         ;//                     <0=> Pclk = Cclk / 4
  201 00000800         ;//                     <1=> Pclk = Cclk
  202 00000800         ;//                     <2=> Pclk = Cclk / 2
  203 00000800         ;//                     <3=> Pclk = Cclk / 8
  204 00000800         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  205 00000800         ;//                     <0=> Pclk = Cclk / 4
  206 00000800         ;//                     <1=> Pclk = Cclk
  207 00000800         ;//                     <2=> Pclk = Cclk / 2
  208 00000800         ;//                     <3=> Pclk = Cclk / 6
  209 00000800         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  210 00000800         ;//                     <0=> Pclk = Cclk / 4
  211 00000800         ;//                     <1=> Pclk = Cclk
  212 00000800         ;//                     <2=> Pclk = Cclk / 2
  213 00000800         ;//                     <3=> Pclk = Cclk / 6
  214 00000800         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  215 00000800         ;//                     <0=> Pclk = Cclk / 4
  216 00000800         ;//                     <1=> Pclk = Cclk
  217 00000800         ;//                     <2=> Pclk = Cclk / 2
  218 00000800         ;//                     <3=> Pclk = Cclk / 6
  219 00000800         ;//   </h>
  220 00000800         ;//
  221 00000800         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL
                       1)
  222 00000800         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  223 00000800         ;//                     <0=> Pclk = Cclk / 4
  224 00000800         ;//                     <1=> Pclk = Cclk
  225 00000800         ;//                     <2=> Pclk = Cclk / 2
  226 00000800         ;//                     <3=> Pclk = Cclk / 8



ARM Macro Assembler    Page 7 


  227 00000800         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  228 00000800         ;//                     <0=> Pclk = Cclk / 4
  229 00000800         ;//                     <1=> Pclk = Cclk
  230 00000800         ;//                     <2=> Pclk = Cclk / 2
  231 00000800         ;//                     <3=> Pclk = Cclk / 8
  232 00000800         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  233 00000800         ;//                     <0=> Pclk = Cclk / 4
  234 00000800         ;//                     <1=> Pclk = Cclk
  235 00000800         ;//                     <2=> Pclk = Cclk / 2
  236 00000800         ;//                     <3=> Pclk = Cclk / 8
  237 00000800         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  238 00000800         ;//                     <0=> Pclk = Cclk / 4
  239 00000800         ;//                     <1=> Pclk = Cclk
  240 00000800         ;//                     <2=> Pclk = Cclk / 2
  241 00000800         ;//                     <3=> Pclk = Cclk / 8
  242 00000800         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  243 00000800         ;//                     <0=> Pclk = Cclk / 4
  244 00000800         ;//                     <1=> Pclk = Cclk
  245 00000800         ;//                     <2=> Pclk = Cclk / 2
  246 00000800         ;//                     <3=> Pclk = Cclk / 8
  247 00000800         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  248 00000800         ;//                     <0=> Pclk = Cclk / 4
  249 00000800         ;//                     <1=> Pclk = Cclk
  250 00000800         ;//                     <2=> Pclk = Cclk / 2
  251 00000800         ;//                     <3=> Pclk = Cclk / 8
  252 00000800         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  253 00000800         ;//                     <0=> Pclk = Cclk / 4
  254 00000800         ;//                     <1=> Pclk = Cclk
  255 00000800         ;//                     <2=> Pclk = Cclk / 2
  256 00000800         ;//                     <3=> Pclk = Cclk / 8
  257 00000800         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  258 00000800         ;//                     <0=> Pclk = Cclk / 4
  259 00000800         ;//                     <1=> Pclk = Cclk
  260 00000800         ;//                     <2=> Pclk = Cclk / 2
  261 00000800         ;//                     <3=> Pclk = Cclk / 8
  262 00000800         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  263 00000800         ;//                     <0=> Pclk = Cclk / 4
  264 00000800         ;//                     <1=> Pclk = Cclk
  265 00000800         ;//                     <2=> Pclk = Cclk / 2
  266 00000800         ;//                     <3=> Pclk = Cclk / 8
  267 00000800         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2
  268 00000800         ;//                     <0=> Pclk = Cclk / 4
  269 00000800         ;//                     <1=> Pclk = Cclk
  270 00000800         ;//                     <2=> Pclk = Cclk / 2
  271 00000800         ;//                     <3=> Pclk = Cclk / 8
  272 00000800         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S
  273 00000800         ;//                     <0=> Pclk = Cclk / 4
  274 00000800         ;//                     <1=> Pclk = Cclk
  275 00000800         ;//                     <2=> Pclk = Cclk / 2



ARM Macro Assembler    Page 8 


  276 00000800         ;//                     <3=> Pclk = Cclk / 8
  277 00000800         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  278 00000800         ;//                     <0=> Pclk = Cclk / 4
  279 00000800         ;//                     <1=> Pclk = Cclk
  280 00000800         ;//                     <2=> Pclk = Cclk / 2
  281 00000800         ;//                     <3=> Pclk = Cclk / 8
  282 00000800         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  283 00000800         ;//                     <0=> Pclk = Cclk / 4
  284 00000800         ;//                     <1=> Pclk = Cclk
  285 00000800         ;//                     <2=> Pclk = Cclk / 2
  286 00000800         ;//                     <3=> Pclk = Cclk / 8
  287 00000800         ;//   </h>
  288 00000800         ;// </e>
  289 00000800 00000001 
                       CLOCK_SETUP
                               EQU              1
  290 00000800 00000020 
                       SCS_Val EQU              0x00000020
  291 00000800 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  292 00000800 0000000B 
                       PLLCFG_Val
                               EQU              0x0000000B
  293 00000800         ;CCLKCFG_Val     EQU     0x00000005 Changed to 03 below 
                       as noted by Mark Butcher
  294 00000800 00000003 
                       CCLKCFG_Val
                               EQU              0x00000003
  295 00000800 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  296 00000800 00000000 
                       PCLKSEL0_Val
                               EQU              0x00000000
  297 00000800 00000000 
                       PCLKSEL1_Val
                               EQU              0x00000000
  298 00000800         
  299 00000800         
  300 00000800         ; Memory Accelerator Module (MAM) definitions
  301 00000800 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  302 00000800 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  303 00000800 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  304 00000800         
  305 00000800         ;// <e> MAM Setup
  306 00000800         ;//   <o1.0..1>   MAM Control
  307 00000800         ;//               <0=> Disabled
  308 00000800         ;//               <1=> Partially Enabled



ARM Macro Assembler    Page 9 


  309 00000800         ;//               <2=> Fully Enabled
  310 00000800         ;//               <i> Mode
  311 00000800         ;//   <o2.0..2>   MAM Timing
  312 00000800         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  313 00000800         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  314 00000800         ;//               <i> Fetch Cycles
  315 00000800         ;// </e>
  316 00000800 00000001 
                       MAM_SETUP
                               EQU              1
  317 00000800         ;MAMCR_Val       EQU     0x00000002
  318 00000800 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  319 00000800         ;MAMTIM_Val      EQU     0x00000004  As noted by Mark Bu
                       tcher
  320 00000800 00000003 
                       MAMTIM_Val
                               EQU              0x00000003
  321 00000800         
  322 00000800         
  323 00000800                 IMPORT           Undef_Wrapper
  324 00000800                 IMPORT           SWI_Wrapper
  325 00000800                 IMPORT           PAbt_Wrapper
  326 00000800                 IMPORT           DAbt_Wrapper
  327 00000800                 IMPORT           IRQ_Wrapper
  328 00000800                 IMPORT           FIQ_Wrapper
  329 00000800         
  330 00000800                 PRESERVE8
  331 00000800         
  332 00000800         ; Area Definition and Entry Point
  333 00000800         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  334 00000800         
  335 00000800                 AREA             RESET, CODE, READONLY
  336 00000000                 ARM
  337 00000000         
  338 00000000         
  339 00000000         ; Exception Vectors
  340 00000000         ;  Mapped to Address 0.
  341 00000000         ;  Absolute addressing mode must be used.
  342 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  343 00000000         
  344 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  345 00000004 E59FF018        LDR              PC, Undef_Addr
  346 00000008 E59FF018        LDR              PC, SWI_Addr
  347 0000000C E59FF018        LDR              PC, PAbt_Addr
  348 00000010 E59FF018        LDR              PC, DAbt_Addr
  349 00000014 E1A00000        NOP                          ; Reserved Vector 
  350 00000018 E59FF018        LDR              PC, IRQ_Addr
  351 0000001C E59FF018        LDR              PC, FIQ_Addr
  352 00000020         
  353 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler



ARM Macro Assembler    Page 10 


  354 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Wrapper
  355 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Wrapper
  356 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Wrapper
  357 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Wrapper
  358 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  359 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Wrapper
  360 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Wrapper
  361 00000040         
  362 00000040         ; Reset Handler
  363 00000040         
  364 00000040                 EXPORT           Reset_Handler
  365 00000040         Reset_Handler
  366 00000040         
  367 00000040         
  368 00000040         ; Setup Clock
  369 00000040                 IF               CLOCK_SETUP != 0
  370 00000040 E59F0104        LDR              R0, =SCB_BASE
  371 00000044 E3A010AA        MOV              R1, #0xAA
  372 00000048 E3A02055        MOV              R2, #0x55
  373 0000004C         
  374 0000004C         ;  Configure and Enable PLL
  375 0000004C E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
  376 00000050 E58031A0        STR              R3, [R0, #SCS_OFS]
  377 00000054         
  378 00000054                 IF               (SCS_Val:AND:OSCEN) != 0
  379 00000054 E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m
                                                            ain osc stabilize
  380 00000058 E2133040        ANDS             R3, R3, #OSCSTAT
  381 0000005C 0AFFFFFC        BEQ              OSC_Loop
  382 00000060                 ENDIF
  383 00000060         
  384 00000060 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock
  385 00000064 E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
  386 00000068 E3A0300B        LDR              R3, =PLLCFG_Val
  387 0000006C E5803084        STR              R3, [R0, #PLLCFG_OFS]
  388 00000070 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  389 00000074 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  390 00000078 E3A03001        MOV              R3, #PLLCON_PLLE
  391 0000007C E5803080        STR              R3, [R0, #PLLCON_OFS]
  392 00000080 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  393 00000084 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  394 00000088         



ARM Macro Assembler    Page 11 


  395 00000088         ;  Wait until PLL Locked
  396 00000088 E5903088 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  397 0000008C E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
  398 00000090 0AFFFFFC        BEQ              PLL_Loop
  399 00000094         
  400 00000094 E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
  401 00000098 E59F40B0        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
  402 0000009C E0033004        AND              R3, R3, R4
  403 000000A0 E3A0400B        LDR              R4, =PLLCFG_Val
  404 000000A4 E0333004        EORS             R3, R3, R4
  405 000000A8 1AFFFFF9        BNE              M_N_Lock
  406 000000AC         
  407 000000AC         ;  Setup CPU clock divider
  408 000000AC E3A03003        MOV              R3, #CCLKCFG_Val
  409 000000B0 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
  410 000000B4         
  411 000000B4         ;  Setup USB clock divider
  412 000000B4 E3A03005        LDR              R3, =USBCLKCFG_Val
  413 000000B8 E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
  414 000000BC         
  415 000000BC         ;  Setup Peripheral Clock
  416 000000BC E3A03000        LDR              R3, =PCLKSEL0_Val
  417 000000C0 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
  418 000000C4 E3A03000        LDR              R3, =PCLKSEL1_Val
  419 000000C8 E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
  420 000000CC         
  421 000000CC         ;  Switch to PLL Clock
  422 000000CC E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  423 000000D0 E5803080        STR              R3, [R0, #PLLCON_OFS]
  424 000000D4 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  425 000000D8 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  426 000000DC                 ENDIF                        ; CLOCK_SETUP
  427 000000DC         
  428 000000DC         
  429 000000DC         ; Setup MAM
  430 000000DC                 IF               MAM_SETUP != 0
  431 000000DC E59F0068        LDR              R0, =MAM_BASE
  432 000000E0 E3A01003        MOV              R1, #MAMTIM_Val
  433 000000E4 E5801004        STR              R1, [R0, #MAMTIM_OFS]
  434 000000E8 E3A01002        MOV              R1, #MAMCR_Val
  435 000000EC E5801000        STR              R1, [R0, #MAMCR_OFS]
  436 000000F0                 ENDIF                        ; MAM_SETUP
  437 000000F0         
  438 000000F0         
  439 000000F0         ; Memory Mapping (when Interrupt Vectors are in RAM)
  440 000000F0 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  441 000000F0                 IF               :DEF:REMAP
  449                          ENDIF
  450 000000F0         
  451 000000F0         
  452 000000F0         ; Initialise Interrupt System
  453 000000F0         ;  ...



ARM Macro Assembler    Page 12 


  454 000000F0         
  455 000000F0         
  456 000000F0         ; Setup Stack for each mode
  457 000000F0         
  458 000000F0 E59F005C        LDR              R0, =Stack_Top
  459 000000F4         
  460 000000F4         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  461 000000F4 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  462 000000F8 E1A0D000        MOV              SP, R0
  463 000000FC E2400000        SUB              R0, R0, #UND_Stack_Size
  464 00000100         
  465 00000100         ;  Enter Abort Mode and set its Stack Pointer
  466 00000100 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  467 00000104 E1A0D000        MOV              SP, R0
  468 00000108 E2400080        SUB              R0, R0, #ABT_Stack_Size
  469 0000010C         
  470 0000010C         ;  Enter FIQ Mode and set its Stack Pointer
  471 0000010C E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  472 00000110 E1A0D000        MOV              SP, R0
  473 00000114 E2400080        SUB              R0, R0, #FIQ_Stack_Size
  474 00000118         
  475 00000118         ;  Enter IRQ Mode and set its Stack Pointer
  476 00000118 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  477 0000011C E1A0D000        MOV              SP, R0
  478 00000120 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  479 00000124         
  480 00000124         ;  Enter Supervisor Mode and set its Stack Pointer
  481 00000124 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  482 00000128 E1A0D000        MOV              SP, R0
  483 0000012C E2400B02        SUB              R0, R0, #SVC_Stack_Size
  484 00000130         
  485 00000130         ;  Enter SYS Mode and set its Stack Pointer
  486 00000130 E321F01F        MSR              CPSR_c, #Mode_SYS
  487 00000134 E1A0D000        MOV              SP, R0
  488 00000138 E24DA000        SUB              SL, SP, #USR_Stack_Size
  489 0000013C         
  490 0000013C         ;  Enter Supervisor Mode
  491 0000013C E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  492 00000140         
  493 00000140                 IMPORT           GPIOResetInit
  494 00000140 EBFFFFFE        BL               GPIOResetInit
  495 00000144         
  496 00000144         ; Enter the C code
  497 00000144         
  498 00000144                 IMPORT           __main
  499 00000144 E59F000C        LDR              R0, =__main
  500 00000148 E12FFF10        BX               R0
  501 0000014C         
  502 0000014C         
  503 0000014C         ; User Initial Stack & Heap
  504 0000014C E01FC000 
              00FF7FFF 



ARM Macro Assembler    Page 13 


              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  505 00000000         
  506 00000000                 IMPORT           __use_two_region_memory
  507 00000000                 EXPORT           __user_initial_stackheap
  508 00000000         __user_initial_stackheap
  509 00000000         
  510 00000000 E59F000C        LDR              R0, =  Heap_Mem
  511 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  512 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  513 0000000C E59F3004        LDR              R3, = Stack_Mem
  514 00000010 E12FFF1E        BX               LR
  515 00000014         
  516 00000014         
  517 00000014                 END
              00000000 
              00000000 
              00000800 
Command Line: --16 --debug --xref --device=DARMP --apcs=interwork -o.\Objects\L
PC2300.o -IC:\Keil\ARM\INC\Philips --predefine="__THUMB_LIBRARY__ SETA 1" --lis
t=.\Listing\LPC2300.lst LPC2300.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 63 in file LPC2300.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 64 in file LPC2300.s
   Uses
      At line 66 in file LPC2300.s
      At line 511 in file LPC2300.s
      At line 513 in file LPC2300.s

Stack_Top 00000A00

Symbol: Stack_Top
   Definitions
      At line 66 in file LPC2300.s
   Uses
      At line 458 in file LPC2300.s
Comment: Stack_Top used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 75 in file LPC2300.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 76 in file LPC2300.s
   Uses
      At line 510 in file LPC2300.s
      At line 512 in file LPC2300.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 357 in file LPC2300.s
   Uses
      At line 348 in file LPC2300.s
Comment: DAbt_Addr used once
FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 360 in file LPC2300.s
   Uses
      At line 351 in file LPC2300.s
Comment: FIQ_Addr used once
IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 359 in file LPC2300.s
   Uses
      At line 350 in file LPC2300.s
Comment: IRQ_Addr used once
M_N_Lock 00000094

Symbol: M_N_Lock
   Definitions
      At line 400 in file LPC2300.s
   Uses
      At line 405 in file LPC2300.s
Comment: M_N_Lock used once
OSC_Loop 00000054

Symbol: OSC_Loop
   Definitions
      At line 379 in file LPC2300.s
   Uses
      At line 381 in file LPC2300.s
Comment: OSC_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 356 in file LPC2300.s
   Uses
      At line 347 in file LPC2300.s
Comment: PAbt_Addr used once
PLL_Loop 00000088

Symbol: PLL_Loop
   Definitions
      At line 396 in file LPC2300.s
   Uses
      At line 398 in file LPC2300.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 335 in file LPC2300.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 353 in file LPC2300.s
   Uses
      At line 344 in file LPC2300.s
Comment: Reset_Addr used once
Reset_Handler 00000040

Symbol: Reset_Handler
   Definitions
      At line 365 in file LPC2300.s
   Uses
      At line 353 in file LPC2300.s
      At line 364 in file LPC2300.s

SWI_Addr 00000028

Symbol: SWI_Addr
   Definitions
      At line 355 in file LPC2300.s
   Uses
      At line 346 in file LPC2300.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 354 in file LPC2300.s
   Uses
      At line 345 in file LPC2300.s
Comment: Undef_Addr used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 344 in file LPC2300.s
   Uses
      None
Comment: Vectors unused
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 504 in file LPC2300.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 508 in file LPC2300.s
   Uses
      At line 507 in file LPC2300.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$RESET 00000000

Symbol: .debug_info$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$RESET undefinedComment: .debug_info$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$RESET 00000000

Symbol: .debug_line$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$RESET undefinedComment: .debug_line$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$.text 00000000

Symbol: .debug_info$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$.text undefinedComment: .debug_info$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$.text 00000000

Symbol: .debug_line$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$.text undefinedComment: .debug_line$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000080

Symbol: ABT_Stack_Size
   Definitions
      At line 55 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 468 in file LPC2300.s

CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 85 in file LPC2300.s
   Uses
      At line 409 in file LPC2300.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000003

Symbol: CCLKCFG_Val
   Definitions
      At line 294 in file LPC2300.s
   Uses
      At line 408 in file LPC2300.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 87 in file LPC2300.s
   Uses
      At line 385 in file LPC2300.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 291 in file LPC2300.s
   Uses
      At line 384 in file LPC2300.s
Comment: CLKSRCSEL_Val used once
CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 289 in file LPC2300.s
   Uses
      At line 369 in file LPC2300.s
Comment: CLOCK_SETUP used once
FIQ_Stack_Size 00000080

Symbol: FIQ_Stack_Size
   Definitions
      At line 56 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 473 in file LPC2300.s

F_Bit 00000040



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: F_Bit
   Definitions
      At line 41 in file LPC2300.s
   Uses
      At line 461 in file LPC2300.s
      At line 466 in file LPC2300.s
      At line 471 in file LPC2300.s
      At line 476 in file LPC2300.s
      At line 481 in file LPC2300.s
      At line 491 in file LPC2300.s

Heap_Size 00000800

Symbol: Heap_Size
   Definitions
      At line 73 in file LPC2300.s
   Uses
      At line 76 in file LPC2300.s
      At line 512 in file LPC2300.s

IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 57 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 478 in file LPC2300.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 40 in file LPC2300.s
   Uses
      At line 461 in file LPC2300.s
      At line 466 in file LPC2300.s
      At line 471 in file LPC2300.s
      At line 476 in file LPC2300.s
      At line 481 in file LPC2300.s
      At line 491 in file LPC2300.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 302 in file LPC2300.s
   Uses
      At line 435 in file LPC2300.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 318 in file LPC2300.s
   Uses
      At line 434 in file LPC2300.s
Comment: MAMCR_Val used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 303 in file LPC2300.s
   Uses
      At line 433 in file LPC2300.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000003

Symbol: MAMTIM_Val
   Definitions
      At line 320 in file LPC2300.s
   Uses
      At line 432 in file LPC2300.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 301 in file LPC2300.s
   Uses
      At line 431 in file LPC2300.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 316 in file LPC2300.s
   Uses
      At line 430 in file LPC2300.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 440 in file LPC2300.s
   Uses
      None
Comment: MEMMAP unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 36 in file LPC2300.s
   Uses
      At line 466 in file LPC2300.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 33 in file LPC2300.s
   Uses
      At line 471 in file LPC2300.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 34 in file LPC2300.s
   Uses
      At line 476 in file LPC2300.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 35 in file LPC2300.s
   Uses
      At line 481 in file LPC2300.s
      At line 491 in file LPC2300.s

Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 38 in file LPC2300.s
   Uses
      At line 486 in file LPC2300.s
Comment: Mode_SYS used once
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 37 in file LPC2300.s
   Uses
      At line 461 in file LPC2300.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 32 in file LPC2300.s
   Uses
      None
Comment: Mode_USR unused
OSCEN 00000020

Symbol: OSCEN
   Definitions
      At line 94 in file LPC2300.s
   Uses
      At line 378 in file LPC2300.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 93 in file LPC2300.s
   Uses
      None
Comment: OSCRANGE unused
OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 95 in file LPC2300.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 380 in file LPC2300.s
Comment: OSCSTAT used once
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 89 in file LPC2300.s
   Uses
      At line 417 in file LPC2300.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val 00000000

Symbol: PCLKSEL0_Val
   Definitions
      At line 296 in file LPC2300.s
   Uses
      At line 416 in file LPC2300.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 90 in file LPC2300.s
   Uses
      At line 419 in file LPC2300.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 00000000

Symbol: PCLKSEL1_Val
   Definitions
      At line 297 in file LPC2300.s
   Uses
      At line 418 in file LPC2300.s
Comment: PCLKSEL1_Val used once
PLLCFG_OFS 00000084

Symbol: PLLCFG_OFS
   Definitions
      At line 82 in file LPC2300.s
   Uses
      At line 387 in file LPC2300.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000B

Symbol: PLLCFG_Val
   Definitions
      At line 292 in file LPC2300.s
   Uses
      At line 386 in file LPC2300.s
      At line 403 in file LPC2300.s

PLLCON_OFS 00000080

Symbol: PLLCON_OFS
   Definitions
      At line 81 in file LPC2300.s
   Uses
      At line 391 in file LPC2300.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 423 in file LPC2300.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 97 in file LPC2300.s
   Uses
      At line 422 in file LPC2300.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 96 in file LPC2300.s
   Uses
      At line 390 in file LPC2300.s
      At line 422 in file LPC2300.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 84 in file LPC2300.s
   Uses
      At line 388 in file LPC2300.s
      At line 389 in file LPC2300.s
      At line 392 in file LPC2300.s
      At line 393 in file LPC2300.s
      At line 424 in file LPC2300.s
      At line 425 in file LPC2300.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions
      At line 98 in file LPC2300.s
   Uses
      At line 401 in file LPC2300.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 99 in file LPC2300.s
   Uses
      At line 401 in file LPC2300.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 83 in file LPC2300.s
   Uses
      At line 396 in file LPC2300.s
      At line 400 in file LPC2300.s

PLLSTAT_PLOCK 04000000




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 100 in file LPC2300.s
   Uses
      At line 397 in file LPC2300.s
Comment: PLLSTAT_PLOCK used once
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 80 in file LPC2300.s
   Uses
      At line 370 in file LPC2300.s
Comment: SCB_BASE used once
SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions
      At line 88 in file LPC2300.s
   Uses
      At line 376 in file LPC2300.s
      At line 379 in file LPC2300.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions
      At line 290 in file LPC2300.s
   Uses
      At line 375 in file LPC2300.s
      At line 378 in file LPC2300.s

SVC_Stack_Size 00000800

Symbol: SVC_Stack_Size
   Definitions
      At line 54 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 483 in file LPC2300.s

Stack_Size 00000A00

Symbol: Stack_Size
   Definitions
      At line 61 in file LPC2300.s
   Uses
      At line 64 in file LPC2300.s
      At line 66 in file LPC2300.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 53 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 463 in file LPC2300.s




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions
      At line 86 in file LPC2300.s
   Uses
      At line 413 in file LPC2300.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 295 in file LPC2300.s
   Uses
      At line 412 in file LPC2300.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000000

Symbol: USR_Stack_Size
   Definitions
      At line 58 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 488 in file LPC2300.s
      At line 511 in file LPC2300.s

51 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DAbt_Wrapper 00000000

Symbol: DAbt_Wrapper
   Definitions
      At line 326 in file LPC2300.s
   Uses
      At line 357 in file LPC2300.s
Comment: DAbt_Wrapper used once
FIQ_Wrapper 00000000

Symbol: FIQ_Wrapper
   Definitions
      At line 328 in file LPC2300.s
   Uses
      At line 360 in file LPC2300.s
Comment: FIQ_Wrapper used once
GPIOResetInit 00000000

Symbol: GPIOResetInit
   Definitions
      At line 493 in file LPC2300.s
   Uses
      At line 494 in file LPC2300.s
Comment: GPIOResetInit used once
IRQ_Wrapper 00000000

Symbol: IRQ_Wrapper
   Definitions
      At line 327 in file LPC2300.s
   Uses
      At line 359 in file LPC2300.s
Comment: IRQ_Wrapper used once
PAbt_Wrapper 00000000

Symbol: PAbt_Wrapper
   Definitions
      At line 325 in file LPC2300.s
   Uses
      At line 356 in file LPC2300.s
Comment: PAbt_Wrapper used once
SWI_Wrapper 00000000

Symbol: SWI_Wrapper
   Definitions
      At line 324 in file LPC2300.s
   Uses
      At line 355 in file LPC2300.s
Comment: SWI_Wrapper used once
Undef_Wrapper 00000000

Symbol: Undef_Wrapper
   Definitions
      At line 323 in file LPC2300.s
   Uses
      At line 354 in file LPC2300.s
Comment: Undef_Wrapper used once
__main 00000000

Symbol: __main



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 498 in file LPC2300.s
   Uses
      At line 499 in file LPC2300.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 506 in file LPC2300.s
   Uses
      None
Comment: __use_two_region_memory unused
9 symbols
410 symbols in table
